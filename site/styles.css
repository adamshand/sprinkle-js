:root {
    --clr-saturation: 85%;
    --clr-lightness: 60%;
    --clr-lightness-dull: 40%;
    --clr-bg-hue: 50;
    --clr-primary-hue: 94;
    --clr-secondary-hue: 25;
    --clr-bg: hsl(var(--clr-bg-hue), var(--clr-saturation), var(--clr-lightness));
    --clr-bg-dull: hsl(var(--clr-secondary-hue), var(--clr-saturation), 30%);
    --clr-primary: hsl(var(--clr-primary-hue), var(--clr-saturation), var(--clr-lightness));
    --clr-primary-dull: hsl(var(--clr-primary-hue), var(--clr-saturation), var(--clr-lightness-dull));
    --clr-secondary: hsl(var(--clr-secondary-hue), var(--clr-saturation), var(--clr-lightness));
    --clr-secondary-dull: hsl(var(--clr-secondary-hue), var(--clr-saturation), var(--clr-lightness-dull));
    --header-height: 4rem;
    --default-skew: 4rem;
}

/* Box sizing rules */
*,
*::before,
*::after {
    box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
    margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
    list-style: none;
}

/* Set core root defaults */
html {
    scroll-padding: calc(var(--header-height) + var(--default-skew));
    scroll-behavior: smooth;
}

/* Set core body defaults */
body {
    min-height: 100vh;
    text-rendering: optimizeSpeed;
    line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
    text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture {
    max-width: 100%;
    display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
    font: inherit;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
    html:focus-within {
        scroll-behavior: auto;
    }

    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}

body {
    background-color: var(--clr-bg);
    overflow-x: hidden;
    background-image: url(./assets/tiles.png);
    font-family: system-ui;
}

:is(button, .btn) {
    --_active-bg: var(--clr-primary);
    font-family: 'Amatic SC', cursive;
    font-size: 1.5rem;
    background-color: var(--_active-bg);
    padding: .4em 1.3em;
    font-weight: 700;
    transition: outline-offset 125ms;
    border: 0.125rem solid black;
    text-decoration: none;
    color: black;
}

:is(button, .btn):is(:focus, :focus-visible):not(:active) {
    outline: 1px solid --clr-secondary;
    outline-offset: .3em;
}

:is(button, .btn):active {
    --_active-bg: var(--clr-primary-dull);
}

:is(button, .btn).secondary {
    --_active-bg: var(--clr-secondary);
}

:is(button, .btn):active.secondary {
    --_active-bg: var(--clr-secondary-dull);
}

:where(h1, h2, h3, h4, h5, h6) {
    font-family: 'Permanent Marker', cursive;
}

.header {
    min-height: var(--header-height);
    padding: 1rem 2rem;
    background-color: var(--clr-bg);
    box-shadow: 0 0 1rem 0 rgb(0 0 0 / .3);
    position: sticky;
    top: 0;
    display: flex;
    gap: 1rem;
    z-index: 10;
}

.header>.logo {
    height: var(--header-height);
    display: flex;
    gap: 1rem;
    position: absolute;
    filter: drop-shadow(0 0 .3rem rgb(0 0 0 / .3));
}

.logo>img {
    object-fit: contain;
    transform: rotate(calc(var(--logo-rotation, 0)*5deg));
}

.logo>h1 {
    font-size: clamp(1.31rem, calc(1.28rem + 0.19vw), 1.50rem);
    align-self: center;
}

.hero {
    display: grid;
    grid-template-columns: 1fr 1fr;
    place-items: center;
    width: min(90%, 55rem);
    margin: auto;
    padding-block: 4rem;
    gap: 4rem;
}

.title {
    transform: rotateZ(-3deg);
    align-self: end;
}

.get-started {
    align-self: baseline;
    position: relative;
}

.get-started:before {
    content: '';
    position: absolute;
    transform: translateX(-163%) rotate(22deg);
    width: 100px;
    height: 100px;
    background-size: contain;
    background-image: url(./assets/arrow.svg);
    pointer-events: none;
}

.to-the-moon {
    background: linear-gradient(90deg, var(--clr-primary-dull), var(--clr-secondary-dull));
    color: black;
}

@supports(-webkit-background-clip: text) {
    .to-the-moon {
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
    }
}

.board {
    background-color: brown;
    padding: 1rem;
    width: 20rem;
    height: 30rem;
    box-shadow: 0 0 .5rem rgba(0 0 0 / .3);
    transform: rotateZ(8deg);
    grid-row: 1 / span 2;
    grid-column: 2;
}


.paper {
    position: relative;
    background-color: hsl(63 75% 70%);
    padding: 1rem;
    min-height: 100%;
    box-shadow: 0 0 .5rem rgba(0 0 0 / .3)
}

.paper:before {
    content: '';
    position: absolute;
    background: grey;
    width: 10%;
    height: 1rem;
    top: 0;
    left: 50%;
    transform: translate(-50%, -50%);
    box-shadow: 0 0 .5rem rgba(0 0 0 / .3)
}

.paper::after {
    content: 'application state';
    background: blue;
    color: white;
    position: absolute;
    top: 0;
    left: 0;
    padding-inline: 0.3rem;
    font-size: .68rem;
}

code>div {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: .2rem;
    overflow-x: hidden;
}

.key {
    overflow: hidden;
    margin-left: 1rem;
}

.mod-value {
    text-align: center;
    padding: 0;
    border: 0;
    outline: 0;
    background-color: rgb(255 255 255 / .5);
    font-family: monospace;
    line-height: 0;
    width: calc(var(--chars, 0) * 1ch);
}

.key:after {
    content: '........................................................................................................................';
}

.get-started-section {
    --_skew-height: var(--default-skew, 4rem);
    background-color: var(--clr-bg-dull);
    color: white;
    padding: 1rem;
    margin-block: var(--_skew-height);
    position: relative;
    display: grid;
    gap: 2rem;
}

.get-started-section>article {
    display: flex;
    gap: 1rem;
    justify-content: center;
    align-items: center;
}

.get-started-section>article:nth-child(even) {
    flex-direction: row-reverse;
}

.get-started-section>article.code-example {
    justify-content: space-evenly;
}

.code-example>div {
    min-width: 50vw;
}

.code-example>p:not(.codepen) {
    background-color: var(--clr-primary);
    color: black;
    font-weight: bold;
    padding: 3rem;
    border-radius: 37% 63% 36% 64% / 35% 43% 57% 65%;
    max-width: 25ch;
    aspect-ratio: 1;
}

.code-example:nth-child(even)>p:not(.codepen) {
    border-radius: 37% 63% 64% 36% / 45% 52% 48% 55%;
}

.get-started-section::before, .get-started-section::after {
    content: '';
    background-color: inherit;
    height: var(--_skew-height);
    position: absolute;
    width: 100%;
    left: 0;
}

.get-started-section::before {
    top: 0;
    transform: translateY(-99%);
    clip-path: polygon(100% 27%, 100% 100%, 0% 100%);
}

.get-started-section::after {
    bottom: 0;
    transform: translateY(99%);
    clip-path: polygon(0% 0%, 100% 0%, 0% 58%);
}


.footer {
    height: 10rem;
    background-image: url('./assets/mine.svg');
    background-position: bottom left;
    background-repeat: repeat-x;
    width: 100%;
    background-size: auto;
    pointer-events: none;
    line-height: 0;
    position: relative;
}

.footer>svg {
    height: 100%;
    width: auto;
}

.footer>svg #body {
    animation: mine-body 1s infinite alternate linear;
    transform-origin: bottom center;
    transform-box: fill-box;
    animation-play-state: var(--animation-state, paused);
}

.footer>svg #arms {
    animation: mine-arms 1s infinite alternate linear;
    transform-origin: bottom right;
    transform-box: fill-box;
    animation-play-state: var(--animation-state, paused);
}

.bitcoin {
    position: absolute;
    top: 0;
    animation: fade-away 1s;
    width: 3rem;
    height: 3rem;
}

@keyframes fade-away {
    from {
        opacity: 1;
    }

    to {
        opacity: 0;
        transform: translate(45%, -100%);
    }
}

@keyframes mine-body {
    from {
        transform: rotate(-10deg);
    }

    to {
        transform: rotate(10deg)
    }
}

@keyframes mine-arms {
    from {
        transform: rotate(-50deg);
    }

    to {
        transform: rotate(20deg)
    }
}

@media screen and (max-width: 43.75rem) {
    .hero {
        grid-template-columns: 1fr;
    }

    .board {
        grid-column: 1;
        grid-row: 3;
    }

    .get-started-section>article:not(:first-child) {
        flex-direction: column-reverse;
        align-items: flex-end;
    }

    .get-started-section>article:nth-child(even) {
        align-items: flex-start;
    }
}